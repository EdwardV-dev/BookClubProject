-- MySQL Script generated by MySQL Workbench
-- Mon Jan  3 16:57:39 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema userbooks
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `userbooks` ;

-- -----------------------------------------------------
-- Schema userbooks
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `userbooks` DEFAULT CHARACTER SET utf8 ;
USE `userbooks` ;

-- -----------------------------------------------------
-- Table `userbooks`.`app_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `userbooks`.`app_role` ;

CREATE TABLE IF NOT EXISTS `userbooks`.`app_role` (
  `idRole` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRole`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `userbooks`.`app_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `userbooks`.`app_user` ;

CREATE TABLE IF NOT EXISTS `userbooks`.`app_user` (
  `app_user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password_hash` VARCHAR(45) NOT NULL,
  `disabled` TINYINT(1) NOT NULL,
  `idRole` INT NOT NULL,
  PRIMARY KEY (`app_user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_app_user_app_role1_idx` (`idRole` ASC) VISIBLE,
  CONSTRAINT `fk_app_user_app_role1`
    FOREIGN KEY (`idRole`)
    REFERENCES `userbooks`.`app_role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `userbooks`.`authors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `userbooks`.`authors` ;

CREATE TABLE IF NOT EXISTS `userbooks`.`authors` (
  `idAuthor` INT NOT NULL AUTO_INCREMENT,
  `author_first_name` VARCHAR(45) NOT NULL,
  `author_last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAuthor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `userbooks`.`books`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `userbooks`.`books` ;

CREATE TABLE IF NOT EXISTS `userbooks`.`books` (
  `idBooks` INT NOT NULL AUTO_INCREMENT,
  `approval_status` TINYINT(1) NOT NULL,
  `book_title` VARCHAR(45) NOT NULL,
  `genre` VARCHAR(45) NOT NULL,
  `publication_year` INT NULL,
  `idAuthor` INT NOT NULL,
  PRIMARY KEY (`idBooks`),
  INDEX `fk_books_authors1_idx` (`idAuthor` ASC) VISIBLE,
  CONSTRAINT `fk_books_authors1`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `userbooks`.`authors` (`idAuthor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `userbooks`.`app_user_has_books`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `userbooks`.`app_user_has_books` ;

CREATE TABLE IF NOT EXISTS `userbooks`.`app_user_has_books` (
  `app_user_id` INT NOT NULL,
  `idBooks` INT NOT NULL,
  `completion_status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`app_user_id`, `idBooks`),
  INDEX `fk_app_user_has_books_books1_idx` (`idBooks` ASC) VISIBLE,
  INDEX `fk_app_user_has_books_app_user1_idx` (`app_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_app_user_has_books_app_user1`
    FOREIGN KEY (`app_user_id`)
    REFERENCES `userbooks`.`app_user` (`app_user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_user_has_books_books1`
    FOREIGN KEY (`idBooks`)
    REFERENCES `userbooks`.`books` (`idBooks`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

delimiter //
create procedure set_known_good_state()
begin
    -- 2. Throws out all records without executing deletes.
    -- Resets the auto_increment value.
    truncate table books;

    -- 3. Add test data.
    insert into books
        (`name`, `type`)
    values
        ('Meep','Mouse'),
        ('Slithpers','Snake'),
        ('Noodles','Dog');
end // -- ensures that 
-- 4. Change the statement terminator back to the original.
delimiter ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
